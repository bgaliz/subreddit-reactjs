{"version":3,"sources":["components/Header/index.tsx","components/NavButton/index.tsx","components/Button/index.tsx","components/Post/index.tsx","components/Feed/index.tsx","services/get.posts.ts","pages/Home/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["Header","className","NavButton","text","state","onClick","Button","disabled","Post","title","nickname","domain","image","created_at","permalink","useState","dateTime","setDateTime","useEffect","dayCreatedPost","Date","now","diff","Math","abs","getTime","day","ceil","hours","minutes","src","alt","indexOf","href","target","Feed","posts","limitOfPosts","MAX_LIMIT","handleGetMorePosts","map","post","index","data","thumbnail","url","author","created_utc","HotPosts","limit","a","axios","get","then","res","status","console","error","children","NewestPosts","TopPosts","Home","setPosts","setLimitOfPosts","topicSelected","setTopicSelected","isLoading","setIsLoading","handleGetPostsByTopicChoosen","topic","list","inicialize","type","color","height","width","Routes","component","path","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddc3f500.chunk.js","sourcesContent":["import React from 'react';\n\nimport './styles.css';\n\nexport const Header: React.FC = () => {\n    return (\n        <div className=\"container-header\">\n            <h2>REACT</h2>\n            <h2>JS</h2>\n        </div>\n    );   \n}","import React from 'react';\n\nimport './styles.css'\n\ninterface ButtonProps {\n    text: string,\n    state: boolean\n    onClick: () => void,\n}\n\nexport const NavButton: React.FC<ButtonProps> = ({\n    text, \n    state,\n    onClick, \n}: ButtonProps) => {\n    return (\n        <button \n            onClick={onClick}\n            className={state ? 'selected' : ''}\n        >\n            <h4 className=\"text\">{ text }</h4>\n        </button>\n    );\n}","import React from 'react';\n\nimport { FaPlus } from 'react-icons/fa'\n\nimport './styles.css'\n\ninterface ButtonProps {\n    text: string\n    disabled: boolean\n    onClick?: () => void;\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n    text,\n    disabled,\n    onClick,\n}:ButtonProps) => {\n    return (\n        <button \n            className=\"seeMoreArticles\" \n            disabled={disabled}\n            onClick={onClick} \n        >\n            <FaPlus />\n            <h4>{text}</h4>\n        </button>\n    )\n}","import React, { useEffect, useState } from 'react';\n\nimport { FaNewspaper, FaLink } from 'react-icons/fa'\n\nimport './styles.css'\n\ninterface PostProps {\n    title: string,\n    nickname: string,\n    domain: string,\n    image: string,\n    created_at: number,\n    permalink: string\n}\n\nexport const Post: React.FC<PostProps> = ({\n    title,\n    nickname,\n    domain,\n    image,\n    created_at,\n    permalink\n}) => {\n    const [dateTime, setDateTime] = useState('');\n\n    useEffect(() => {\n        const dayCreatedPost = new Date(created_at * 1000);\n        const now = new Date();\n        const diff = Math.abs(now.getTime() - dayCreatedPost.getTime()); \n\n        const day = Math.ceil(diff / (1000 * 60 * 60 * 24));\n        const hours = Math.ceil(diff / (1000 * 60 * 60));\n        const minutes = Math.ceil(diff / (1000 * 60));\n\n        if (minutes <= 60) {\n            setDateTime(`${minutes} minutos`);\n        } else if (hours <= 24) {\n            if(hours > 1) {\n                setDateTime(`${hours} horas`)\n            } else {\n                setDateTime(`${hours} hora`)\n            }\n        } else {\n            setDateTime(`${day} dias`);\n        }\n        \n    },[]);\n\n    function handleGetImageOrSvg() {\n        if(image) {\n            return <img src={image} alt=\"thumbnail.png\" />\n        } else if (domain.indexOf('www.reddit.com') >= 0) {\n            return <FaNewspaper />\n        } else {\n            return <FaLink />\n        }\n    }\n\n    return (\n        <article className=\"container-post\" >\n            <div className=\"container-imagem\">\n                    {\n                        handleGetImageOrSvg()\n                    }\n                </div>\n                <div className=\"details-post\">\n                    <a href={`https://www.reddit.com/${permalink}`} target=\"_blank\">\n                        <h4 className=\"title\">{title}</h4>\n                    </a>\n                    <p className=\"sentBy\">Enviado a {dateTime} por <a href={`https://www.reddit.com/user/${nickname}/`}>{nickname}</a></p>\n                    <a href={domain} className=\"domain\">\n                        {domain}\n                    </a>\n                </div>\n        </article>\n    );\n}","import React from 'react';\n\nimport { Button } from '../Button';\nimport { Post } from '../Post';\n\ninterface FeedProps {\n    posts: never[],\n    limitOfPosts: number,\n    MAX_LIMIT: number\n    handleGetMorePosts: () => void\n}\n\ninterface PostDataProps {\n    data: PostProps\n}\n\ninterface PostProps {\n    title: string,\n    author: string,\n    domain: string,\n    thumbnail: string,\n    created_utc: number,\n    url: string,\n    permalink: string\n}\n\nexport const Feed: React.FC<FeedProps> = ({\n    posts,\n    limitOfPosts,\n    MAX_LIMIT,\n    handleGetMorePosts,\n}: FeedProps) => {\n    return (\n        <main>\n            {\n                posts.map((post: PostDataProps, index) => {\n                    const image = post.data.thumbnail.indexOf('http') >= 0 ? post.data.thumbnail : ''\n                    const domain = post.data.domain === 'self.reactjs' ? post.data.url : post.data.domain\n\n                    return (\n                        <Post\n                            key={index}\n                            title={post.data.title}\n                            domain={domain}\n                            image={image}\n                            nickname={post.data.author}  \n                            created_at={post.data.created_utc}   \n                            permalink={post.data.permalink}  \n                        />\n                    )\n                })\n            }\n            <Button\n                text=\"Ver mais\"\n                onClick={handleGetMorePosts}\n                disabled={limitOfPosts === MAX_LIMIT}\n            />\n        </main>\n    );\n}","import axios from 'axios'\n\nexport async function HotPosts(limit: number) {\n    return await axios.get(`\n        https://www.reddit.com/r/reactjs/hot.json?limit=${limit}`\n    )\n    .then(res => {\n        if(res.status !== 200) {\n            console.error('Falha ao requisitar os hot posts de subreddit reactjs')\n        }\n        \n        if (res.data !== null ) {\n            return res.data.data.children\n        }\n    })\n}\n\nexport async function NewestPosts(limit: number) {\n    return await axios.get(`\n        https://www.reddit.com/r/reactjs/new.json?limit=${limit}\n    `)\n    .then(res => {\n        if(res.status !== 200) {\n            console.error('Falha ao requisitar os news posts de subreddit reactjs')\n        }\n        \n        if (res.data !== null ) {\n            return res.data.data.children\n        }\n    })\n}\n\nexport async function TopPosts(limit: number) {\n    return await axios.get(`\n        https://www.reddit.com/r/reactjs/top.json?limit=${limit}\n    `)\n    .then(res => {\n        if(res.status !== 200) {\n            console.error('Falha ao requisitar os top/rising posts de subreddit reactjs')\n        }\n\n        if (res.data !== null ) {\n            return res.data.data.children\n        }\n    })\n}","import React, { useEffect, useState } from 'react';\n\nimport ReactLoading from 'react-loading';\n\nimport { NavButton } from '../../components/NavButton';\nimport { Feed } from '../../components/Feed';\n\nimport { HotPosts, NewestPosts, TopPosts } from '../../services/get.posts';\n\nimport './styles.css'\n\nexport const Home: React.FC = () => {\n    const INITIALIZE_LIMIT = 10\n    const MAX_LIMIT = 100\n\n    const [posts, setPosts] = useState([]);\n    const [limitOfPosts, setLimitOfPosts] = useState(INITIALIZE_LIMIT);\n    const [topicSelected, setTopicSelected] = useState('Hot');\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        const inicialize = async () => {\n            handleGetPostsByTopicChoosen(topicSelected)\n        }\n        inicialize();\n    },[limitOfPosts])\n\n    async function handleGetPostsByTopicChoosen(topic: string){\n        setTopicSelected(topic);\n\n        if(topicSelected !== topic) {\n            setIsLoading(!isLoading);\n            setLimitOfPosts(INITIALIZE_LIMIT);\n        }\n\n        if(topic === 'Hot'){\n            setTopicSelected(topic)\n            await HotPosts(limitOfPosts)\n            .then(list => {\n                setPosts(list);\n            });\n        } else if (topic === 'News'){\n            setTopicSelected(topic)\n            await NewestPosts(limitOfPosts)\n            .then(list => {\n                setPosts(list);\n            });\n        } else {\n            setTopicSelected(topic)\n            await TopPosts(limitOfPosts)\n            .then(list => {\n                setPosts(list);\n            });\n        }\n\n        setIsLoading(false);\n    }\n\n    function handleGetMorePosts() {\n        if(limitOfPosts <= MAX_LIMIT) {\n            setLimitOfPosts(limitOfPosts + 10);\n        }\n        handleGetPostsByTopicChoosen(topicSelected)\n    }\n\n    return (\n        <div className=\"main\">\n            <div className=\"wrap\">\n                <div className=\"container-navigation\">\n                    <NavButton \n                        text=\"Hot\" \n                        onClick={() => handleGetPostsByTopicChoosen('Hot')} \n                        state={topicSelected === 'Hot'}\n                    />\n                    <NavButton \n                        text=\"News\" \n                        onClick={() => handleGetPostsByTopicChoosen('News')} \n                        state={topicSelected === 'News'}\n                    />\n                    <NavButton \n                        text=\"Rising\" \n                        onClick={() => handleGetPostsByTopicChoosen('Rising')} \n                        state={topicSelected === 'Rising'}\n                    />\n                </div>\n                {\n                    isLoading \n                    ?\n                    <div className=\"container-loading\">\n                        <ReactLoading type=\"spin\" color='#A7B0BE' height={100} width={100} />\n                    </div>\n                    :\n                    <Feed \n                        posts={posts} \n                        limitOfPosts={limitOfPosts} \n                        MAX_LIMIT={MAX_LIMIT}\n                        handleGetMorePosts={handleGetMorePosts}\n                    />\n                }\n            </div>\n        </div>\n    );\n}","import React from 'react'\nimport { Route, BrowserRouter } from 'react-router-dom';\n\nimport {Header} from './components/Header';\n\nimport { Home } from './pages/Home';\n\nconst Routes = () => {\n    return (\n        <BrowserRouter>\n            <Header />\n            <Route component={Home} path=\"/\" exact/>\n        </BrowserRouter>\n    );\n}\n\nexport default Routes;","import React from 'react';\nimport './App.css';\n\nimport Routes from './routes';\n\nfunction App() {\n  return <Routes />\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}